{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nlet id = 0;\nconst empSlice = createSlice({\n  name: \"Employee\",\n  initialState: [],\n  reducers: {\n    addEmp: (state, action) => {\n      state.push({\n        id: ++id,\n        name: action.payload.name\n      });\n    },\n    removeEmp: (state, action) => {\n      const index = state.findIndex(emp => emp.id === action.payload.id);\n      state.splice(index, 1);\n    }\n  }\n});\nexport const {\n  addEmp,\n  removeEmp\n} = empSlice.actions;\nexport const empReducer = empSlice.reducer;","map":{"version":3,"names":["createSlice","id","empSlice","name","initialState","reducers","addEmp","state","action","push","payload","removeEmp","index","findIndex","emp","splice","actions","empReducer","reducer"],"sources":["/Users/santosh/Desktop/sunny/react-redux/to-do-app/src/store/employee.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nlet id = 0\nconst empSlice = createSlice({\n    name:\"Employee\",\n    initialState:[],\n    reducers:{\n        addEmp:(state,action) =>{\n            state.push({\n                id:++id,\n                name:action.payload.name\n            })\n        },\n        removeEmp:(state,action) =>{\n            const index = state.findIndex(emp => emp.id === action.payload.id)\n            state.splice(index,1)\n        },\n       \n    }\n})\n\n\nexport const {addEmp,removeEmp} = empSlice.actions\nexport const empReducer = empSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,IAAIC,EAAE,GAAG,CAAC;AACV,MAAMC,QAAQ,GAAGF,WAAW,CAAC;EACzBG,IAAI,EAAC,UAAU;EACfC,YAAY,EAAC,EAAE;EACfC,QAAQ,EAAC;IACLC,MAAM,EAACA,CAACC,KAAK,EAACC,MAAM,KAAI;MACpBD,KAAK,CAACE,IAAI,CAAC;QACPR,EAAE,EAAC,EAAEA,EAAE;QACPE,IAAI,EAACK,MAAM,CAACE,OAAO,CAACP;MACxB,CAAC,CAAC;IACN,CAAC;IACDQ,SAAS,EAACA,CAACJ,KAAK,EAACC,MAAM,KAAI;MACvB,MAAMI,KAAK,GAAGL,KAAK,CAACM,SAAS,CAACC,GAAG,IAAIA,GAAG,CAACb,EAAE,KAAKO,MAAM,CAACE,OAAO,CAACT,EAAE,CAAC;MAClEM,KAAK,CAACQ,MAAM,CAACH,KAAK,EAAC,CAAC,CAAC;IACzB;EAEJ;AACJ,CAAC,CAAC;AAGF,OAAO,MAAM;EAACN,MAAM;EAACK;AAAS,CAAC,GAAGT,QAAQ,CAACc,OAAO;AAClD,OAAO,MAAMC,UAAU,GAAGf,QAAQ,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}