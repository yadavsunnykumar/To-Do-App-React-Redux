{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { apiCallBegan } from \"./api\";\n// let id = 0\nconst initialState = {\n  tasks: [],\n  loading: false,\n  error: null\n};\n\n// export const fetchTasks = createAsyncThunk('fetchTasks',async (a,{rejectWithValue}) =>{\n//     try {\n//         const response = await axios.get(\"/api/tasks\")\n//         return {tasks:response.data}\n\n//     } catch (error) {\n//         return rejectWithValue({error:error.message})\n\n//     }\n\n// })\n// console.log(asyncthnk)\n\nconst taskSlice = createSlice({\n  name: \"Tasks\",\n  initialState,\n  reducers: {\n    //action:function\n    apiRequested: (state, action) => {\n      state.loading = true;\n    },\n    apiRequestFailed: (state, action) => {\n      state.loading = false;\n    },\n    getTasks: (state, action) => {\n      state.tasks = action.payload;\n      state.loading = false;\n    },\n    addTask: (state, action) => {\n      state.tasks.push(action.payload);\n      // console.log(action.payload)\n    },\n    removeTask: (state, action) => {\n      console.log(action.payload.id);\n      const index = state.tasks.findIndex(task => task.id === action.payload.id);\n      state.tasks.splice(index, 1);\n    },\n    completedTask: (state, action) => {\n      const index = state.tasks.findIndex(task => task.id === action.payload.id);\n      state.tasks[index].completed = action.payload.completed;\n    }\n  }\n  // extraReducers:(builder) =>{\n  //     builder.addCase(fetchTasks.pending,(state,action)=>{\n  //         state.loading = true\n  //     })\n  //     builder.addCase(fetchTasks.fulfilled,(state,action) => {\n  //         state.tasks = action.payload.tasks\n  //         state.loading = false\n  //     })\n  //     builder.addCase(fetchTasks.rejected,(state,action) =>{\n  //         state.error = action.payload.error\n  //         state.loading = false\n  //     })\n  // }\n});\n// console.log(taskSlice)\n\nexport const {\n  apiRequested,\n  apiRequestFailed,\n  getTasks,\n  addTask,\n  completedTask,\n  removeTask\n} = taskSlice.actions;\nexport const taskReducer = taskSlice.reducer;\n\n//Action creators\nconst url = '/api/tasks';\nexport const loadTasks = () => {\n  return apiCallBegan({\n    url,\n    onStart: apiRequested.type,\n    onSuccess: getTasks.type,\n    onError: apiRequestFailed.type\n  });\n};\nexport const addNewTask = task => {\n  return apiCallBegan({\n    url,\n    method: \"POST\",\n    data: task,\n    onSuccess: addTask.type\n  });\n};\nexport const updateCompleted = task => {\n  return apiCallBegan({\n    url: `${url}/${task.id}`,\n    method: \"PATCH\",\n    data: task,\n    onSuccess: completedTask.type\n  });\n};\nexport const removeOneTask = task => {\n  return apiCallBegan({\n    url: `${url}/${task.id}`,\n    method: \"DELETE\",\n    data: task,\n    onSuccess: removeTask.type\n  });\n};","map":{"version":3,"names":["createSlice","apiCallBegan","initialState","tasks","loading","error","taskSlice","name","reducers","apiRequested","state","action","apiRequestFailed","getTasks","payload","addTask","push","removeTask","console","log","id","index","findIndex","task","splice","completedTask","completed","actions","taskReducer","reducer","url","loadTasks","onStart","type","onSuccess","onError","addNewTask","method","data","updateCompleted","removeOneTask"],"sources":["/Users/santosh/Desktop/sunny/react-redux/to-do-app/src/store/task.js"],"sourcesContent":["import { createSlice} from \"@reduxjs/toolkit\"\n\nimport { apiCallBegan } from \"./api\"\n// let id = 0\nconst initialState = {\n    tasks:[],\n    loading:false,\n    error:null\n}\n\n// export const fetchTasks = createAsyncThunk('fetchTasks',async (a,{rejectWithValue}) =>{\n//     try {\n//         const response = await axios.get(\"/api/tasks\")\n//         return {tasks:response.data}\n        \n//     } catch (error) {\n//         return rejectWithValue({error:error.message})\n        \n//     }\n\n// })\n// console.log(asyncthnk)\n\n\n\n\n\nconst taskSlice = createSlice({\n    name:\"Tasks\",\n    initialState,\n    reducers:{\n        //action:function\n        apiRequested:(state,action) =>{\n            state.loading = true\n        },\n        apiRequestFailed:(state,action)=>{\n            state.loading = false\n        },\n        getTasks:(state,action) => {\n            state.tasks = action.payload\n            state.loading = false\n        },\n        addTask:(state,action) =>{\n            state.tasks.push(action.payload)\n            // console.log(action.payload)\n\n        \n        },\n        removeTask:(state,action) =>{\n            console.log(action.payload.id)\n            const index = state.tasks.findIndex(task=>task.id===action.payload.id)\n            state.tasks.splice(index,1)\n        },\n        completedTask:(state,action)=>{\n            const index = state.tasks.findIndex(task => task.id === action.payload.id)\n            state.tasks[index].completed = action.payload.completed        },\n        \n    },\n    // extraReducers:(builder) =>{\n    //     builder.addCase(fetchTasks.pending,(state,action)=>{\n    //         state.loading = true\n    //     })\n    //     builder.addCase(fetchTasks.fulfilled,(state,action) => {\n    //         state.tasks = action.payload.tasks\n    //         state.loading = false\n    //     })\n    //     builder.addCase(fetchTasks.rejected,(state,action) =>{\n    //         state.error = action.payload.error\n    //         state.loading = false\n    //     })\n    // }\n})\n// console.log(taskSlice)\n\n\n\nexport const {apiRequested,apiRequestFailed,getTasks,addTask,completedTask,removeTask} = taskSlice.actions\n\n\nexport const taskReducer = taskSlice.reducer\n\n\n//Action creators\nconst url = '/api/tasks'\n\nexport const loadTasks = () =>{\n    return apiCallBegan({\n        url,\n        onStart:apiRequested.type,\n        onSuccess:getTasks.type,\n        onError:apiRequestFailed.type\n    })\n}\n\nexport const addNewTask = (task) =>{\n    return apiCallBegan({\n        url,\n        method:\"POST\",\n        data:task,\n        onSuccess:addTask.type,\n\n    })\n}\nexport const updateCompleted = (task) =>{\n    return apiCallBegan({\n        url:`${url}/${task.id}`,\n        method:\"PATCH\",\n        data:task,\n        onSuccess:completedTask.type\n    })\n}\nexport const removeOneTask = (task) =>{\n    return apiCallBegan({\n        url :`${url}/${task.id}`,\n        method:\"DELETE\",\n        data:task,\n        onSuccess:removeTask.type\n    })\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}